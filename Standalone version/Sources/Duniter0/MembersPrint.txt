(* 
Duniter0: WotWizard.

Copyright (C) 2017 GérardMeunier

This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License  for more details.

You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
*)

MODULE Duniter0MembersPrint;
	
	

	IMPORT
		
		B := Duniter0Blockchain, M := Duniter0Members, Dialog, HermesAxes, HermesScat, HermesUtil, HermesViews, Ports, TextMappers, TextModels, TextViews, Views;

	PROCEDURE Do*;
		
		CONST
			
			scatColor= 00BF00BFH;
			scatShape= HermesScat.point;
		
		VAR
			
			t: TextModels.Model;
			f: TextMappers.Formatter;
			a: POINTER TO ARRAY OF INTEGER;
			i, m: INTEGER;
			s: Views.Title;
			p: HermesViews.View;
			ts: POINTER TO ARRAY OF HermesUtil.Dot;
			tr: HermesViews.Trace;
		
		BEGIN (*Do*)
			M.Count(a);
			t := TextModels.dir.New();
			f.ConnectTo(t);
			f.WriteMsg("#Duniter0:Block"); f.WriteString(" "); f.WriteInt(B.LastBlock());
			f.WriteLn; f.WriteLn;
			m := LEN(a);
			FOR i := 0 TO m - 1 DO
				f.WriteTab;
				f.WriteInt(i);
				f.WriteTab;
				f.WriteInt(a[i]);
				f.WriteLn;
			END;
			Dialog.MapString("#Duniter0:MembersNb", s);
			Views.OpenAux(TextViews.dir.New(t), s);
			p:= HermesViews.New();
			NEW(ts, m);
			FOR i := 0 TO m - 1 DO
				ts[i].x := i;
				ts[i].y := a[i];
			END;
			tr:= HermesScat.Insert(p, ts, scatShape, FALSE, FALSE, FALSE);
			tr.ChangeColor(scatColor);
			tr:= HermesAxes.Insert(p, FALSE, TRUE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, 't', 'd', 0, 3);
			tr:= HermesAxes.Insert(p, TRUE, TRUE, FALSE, FALSE, TRUE, TRUE, FALSE, FALSE, 'n', '', 0, 3);
			Views.OpenAux(p, s);
		END Do;

	PROCEDURE DoP* (period: INTEGER);
		
		
		VAR
			
			t: TextModels.Model;
			f: TextMappers.Formatter;
			a: POINTER TO ARRAY OF INTEGER;
			i: INTEGER;
			s: Views.Title;
		
		BEGIN (*DoP*)
			M.CountP(period, a);
			t := TextModels.dir.New();
			f.ConnectTo(t);
			FOR i := 0 TO LEN(a) - 1 DO
				f.WriteTab;
				f.WriteInt(i * period);
				f.WriteTab;
				f.WriteInt(a[i]);
				f.WriteLn;
			END;
			Dialog.MapString("#Duniter0:MembersNb", s);
			Views.OpenAux(TextViews.dir.New(t), s);
		END DoP;
	
	END Duniter0MembersPrint.

Duniter0MembersPrint.Do;

"Duniter0MembersPrint.DoP(20)"
