(* 
Duniter0: WotWizard.

Copyright (C) 2017 GérardMeunier

This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License  for more details.

You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
*)

MODULE Duniter0IdentitiesPrint;
	
	

	IMPORT
		
		B := Duniter0Blockchain, BA := Duniter0Basic, Dialog, StdLog;
	
	PROCEDURE Print*;
		
		VAR
			
			uid: B.String;
			pubkey: B.Pubkey;
			hash: B.Hash;
			bnb: INTEGER;
			ok, b, member: BOOLEAN;
			n: INTEGER;
			mt, t, exp: LONGINT;
			s: BA.DateTime;
			ss: Dialog.String;
		
		BEGIN (*Print*)
			StdLog.Clear; StdLog.Open;
			StdLog.Ln;
			ok := B.IdNextPubkeyM(TRUE, pubkey);
			WHILE ok DO
				StdLog.String(pubkey); StdLog.Tab;
				b := B.IdPubComplete(pubkey, uid, member, hash, bnb, exp); ASSERT(b);
				StdLog.String(uid); StdLog.Tab;
				b := B.TimeOf(bnb, mt, t); ASSERT(b);
				BA.TimestampToString(mt, s);
				StdLog.String(s);
				StdLog.String(" -> ");
				BA.TimestampToString(exp, s);
				StdLog.String(s);
				StdLog.Ln;
				ok := B.IdNextPubkeyM(FALSE, pubkey);
			END;
			StdLog.Ln;
			n := 0;
			ok := B.IdNextUidM(TRUE, uid);
			WHILE ok DO
				StdLog.String(uid); StdLog.Tab;
				b := B.IdUidComplete(uid, pubkey, member, hash, bnb, exp); ASSERT(b);
				IF member THEN
					INC(n);
				END;
				StdLog.String(pubkey); StdLog.Tab;
				b := B.TimeOf(bnb, mt, t); ASSERT(b);
				BA.TimestampToString(mt, s);
				StdLog.String(s);
				StdLog.String(" -> ");
				BA.TimestampToString(exp, s);
				StdLog.String(s);
				StdLog.Ln;
				ok := B.IdNextUidM(FALSE, uid);
			END;
			StdLog.Ln;
			ASSERT(n = B.IdLenM());
			Dialog.MapString("#Duniter0:MembersNb", ss);
			StdLog.String(ss + " = ");
			StdLog.Int(n);
			StdLog.Ln;
		END Print;
	
	END Duniter0IdentitiesPrint.

Duniter0IdentitiesPrint.Print;