(* 
Duniter: WotWizard.

Copyright (C) 2017 GérardMeunier

This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License  for more details.

You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
*)

MODULE DuniterClock;
	
	

	IMPORT
		
		B := DuniterBlockchain, BA := DuniterBasic, Dates, Dialog;
	
	VAR
		
		times*: RECORD
			utcTime-,
			medianTime-,
			time-: BA.DateTime;
		END;
		
		oldBlock: INTEGER;
	
	PROCEDURE Hours (OUT t, mT, rT: LONGINT): BOOLEAN;
		
		VAR
			
			d: Dates.Date;
			ti: Dates.Time;
			b, ok: BOOLEAN;
			bnb: INTEGER;
		
		BEGIN (*Hours*)
			bnb := B.LastBlock();
			ok := bnb # oldBlock;
			IF ok THEN
				Dates.GetUTCDate(d);
				Dates.GetUTCTime(ti);
				t := Dates.Day(d) - BA.t0;
				t := ((t * 24 + ti.hour) * 60 + ti.minute) * 60 + ti.second;
				b := B.TimeOf(bnb, mT, rT); ASSERT(b, 100);
				oldBlock := bnb;
			END;
			RETURN ok;
		END Hours;
	
	PROCEDURE UpdateTime;
		
		VAR
			
			t, mT, rT: LONGINT;
		
		BEGIN (*UpdateTime*)
			IF Hours(t, mT, rT) THEN
				BA.TimestampToString(t, times.utcTime);
				BA.TimestampToString(mT, times.medianTime);
				BA.TimestampToString(rT, times.time);
				Dialog.Update(times);
			END;
		END UpdateTime;
	
	PROCEDURE Init;
		
		BEGIN (*Init*)
			oldBlock := - 1;
			UpdateTime;
			B.AddUpdateProc(UpdateTime);
		END Init;
	
	BEGIN (*DuniterClock*)
		Init;
	CLOSE
		B.RemoveUpdateProc(UpdateTime);
	END DuniterClock.
