(* 
Duniter: WotWizard.

Copyright (C) 2017 GérardMeunier

This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License  for more details.

You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
*)

MODULE DuniterMembers;
	
	

	IMPORT
		
		B := DuniterBlockchain;
	
	PROCEDURE Count* (OUT counts: POINTER TO ARRAY OF INTEGER);
		
		CONST
			
			day = 60 * 60 * 24;
		
		VAR
			
			ok, b: BOOLEAN;
			pk: B.Pubkey;
			uid: B.String;
			jb, lb, nb, n: INTEGER;
			mT, time, t0: LONGINT;
		
		BEGIN (*Count*)
			t0 := MAX(LONGINT);
			ok := B.JLNextPubkey(TRUE, pk);
			WHILE ok DO
				b := B.JLPub(pk, jb, lb) & B.TimeOf(jb, mT, time); ASSERT(b);
				t0 := MIN(t0, time);
				ok := B.JLNextPubkey(FALSE, pk);
			END;
			NEW(counts, SHORT((B.RealNow() - t0 + day - 1) DIV day));
			FOR n := 0 TO LEN(counts) - 1 DO
				counts[n] := 0;
			END;
			ok := B.JLNextPubkey(TRUE, pk);
			WHILE ok DO
				b := B.JLPub(pk, jb, lb) & B.TimeOf(jb, mT, time);
				INC(counts[SHORT((time - t0) DIV day)]);
				IF lb # B.hasNotLeaved THEN
					b := B.TimeOf(lb, mT, time); ASSERT(b);
					DEC(counts[SHORT((time - t0) DIV day)]);
				END;
				ok := B.JLNextPubkey(FALSE, pk);
			END;
			FOR n := 1 TO LEN(counts) - 1 DO
				INC(counts[n], counts[n - 1]);
			END;
		END Count;
	
	END DuniterMembers.
