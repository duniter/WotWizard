BabelInterface

DEFINITION BabelInterface;

	CONST
		eOF1 = 00X;
		withoutDisp = 0;
		remarks = 1;
		warnings = 2;
		errors = 3;

	TYPE
		String = POINTER TO ARRAY OF CHAR;
		Chaine = String;

		Face = POINTER TO ABSTRACT RECORD 
			(f: Face) Pos- (): INTEGER, NEW, ABSTRACT;
			(f: Face) SetPos- (pos: INTEGER), NEW, ABSTRACT;
			(f: Face) Read- (OUT ch: CHAR), NEW, ABSTRACT;
			(f: Face) String- (IN s: ARRAY OF CHAR), NEW, EMPTY;
			(f: Face) Ln-, NEW, EMPTY;
			(f: Face) Map- (IN index, p0, p1, p2: ARRAY OF CHAR): String, NEW, EXTENSIBLE;
			(f: Face) Error- (p, l, c: INTEGER; IN mes: ARRAY OF CHAR), NEW, EXTENSIBLE;
			(f: Face) CompComp (OUT name: String): BYTE, NEW;
			(f: Face) BinInt- (i: INTEGER), NEW, ABSTRACT;
			(f: Face) OutComp, NEW
		END;

END BabelInterface.

The module BabelInterface is part of the Babel subsystem, a compiler compiler. BabelInterface is the programming interface corresponding (and called by) the user interface BabelBabel. It builds a .tbl file from a definition document.

CONST eOF1
End of file character (= BabelCompil.eOF1).

CONST withoutDisp
Possible result of Face.CompComp. Indicates that compilation was done without display of comments.

CONST remarks
Possible result of Face.CompComp. Indicates the production of remarks during compilation.

CONST warnings
Possible result of Face.CompComp. Indicates the production of warnings during compilation.

CONST errors
Possible result of Face.CompComp. Indicates the production of error messages during compilation.

TYPE String
Dynamic string, result of Face.Map.
String replace Chaine, present in older version and now deprecated, but still present for compatibility.

TYPE Chaine
Deprecated, see String.

TYPE Face
ABSTRACT
Defines primitives for the compilation of a Babel definition text into a binary .tbl  file.

PROCEDURE (f: Face) Pos- (): INTEGER
NEW, ABSTRACT
Returns the running position in the parsed text (any origin is allowed).

PROCEDURE (f: Face) SetPos- (pos: INTEGER)
NEW, ABSTRACT
Moves the running position in the parsed text to pos (the origin must be the same than for Pos).

PROCEDURE (f: Face) Read- (OUT ch: CHAR)
NEW, ABSTRACT
Method for reading the parsed text; ch is the next parsed character.

PROCEDURE (f: Face) String- (IN s: ARRAY OF CHAR)
NEW, EMPTY
Method for writing a string in the text of comments.

PROCEDURE (f: Face) Ln-
NEW, EMPTY
Method for writing an end of line in the text of comments.

PROCEDURE (f: Face) Map- (IN index, p0, p1, p2: ARRAY OF CHAR): String
NEW, EXTENSIBLE
Maps an index text to a more lengthy one, replacing ^0, ^1 and ^2 occurrences by p0, p1, p2, without any modification of the latter strings. Used to make explicit or to translate error messages. Analog to Dialog.MapParamString and uses the same syntax.

PROCEDURE (f: Face) Error- (p, l, c: INTEGER; IN mes: ARRAY OF CHAR)
NEW, EXTENSIBLE
Reports an error which takes place at position p, line l and column c in the parsed text. mes is the error message. The implemented procedure writes these informations with f.String, f.Ln and f.Map.

PROCEDURE (f: Face) CompComp (OUT name: String): BYTE
NEW
Compiles a definition text, builds from this document a compiler, writes possibly comments and returns a value (equal to withoutDisp, remarks, warnings or errors) indicating the state of compilation. If errors is returned, the compiler was not created. If another value that withoutDisp is returned, a text of comments were written by the Face.String and Face.Ln methods. The definition text is read by Face.Read, with the help of Face.Pos and Face.SetPos. name returns the name of the document, as written after the first keyword BABEL.

PROCEDURE (f: Face) BinInt- (i: INTEGER)
NEW, ABSTRACT
Method for writing in the binary (.tbl) file; i: next integer to write.

PROCEDURE (f: Face) OutComp
NEW
Writes the binary file, corresponding to the compiler created by Face.CompComp, using the Face.BinInt method.
