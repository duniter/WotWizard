(* 
Duniter1: WotWizard.

Copyright (C) 2017 GérardMeunier

This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License  for more details.

You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
*)

MODULE Duniter1Parameters;
	
	

	IMPORT
		
		BA := Duniter1Basic, B := Duniter1Blockchain, J := UtilJson, TextMappers, TextModels, TextViews;
	
	TYPE
		
		Action = POINTER TO RECORD (B.Action)
			output: BA.String;
		END;
	
	PROCEDURE List (): J.Json;
		
		VAR
			
			j: J.Json;
		
		BEGIN (*List*)
			j := J.ReadFile(B.dDir, B.dPars); ASSERT(j # NIL, 100);
			RETURN j;
		END List;
	
	PROCEDURE Json (j: J.Json; IN name: ARRAY OF CHAR);
		
		VAR
			
			t: TextModels.Model;
			f: TextMappers.Formatter;
		
		BEGIN (*Json*)
			t := TextModels.dir.New();
			f.ConnectTo(t);
			j.Write(f);
			BA.VRegister(TextViews.dir.New(t), BA.waitLoc, name$, 100, "Parameters.Json");
		END Json;
	
	PROCEDURE (a: Action) Activate;
		
		BEGIN (*Activate*)
			Json(List(), a.output);
		END Activate;
	
	PROCEDURE Do* (IN output: ARRAY OF CHAR);
		
		VAR
			
			a: Action;
		
		BEGIN (*Do*)
			NEW(a);
			NEW(a.output, LEN(output$) + 1); a.output^ := output$;
			B.AddAction(a);
		END Do;
	
	END Duniter1Parameters.
